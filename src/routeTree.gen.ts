/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as HandRankingImport } from './routes/hand-ranking'
import { Route as GameRulesImport } from './routes/game-rules'
import { Route as DataSourceImport } from './routes/data-source'
import { Route as CalculatorResultsImport } from './routes/calculator-results'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const HandRankingRoute = HandRankingImport.update({
  id: '/hand-ranking',
  path: '/hand-ranking',
  getParentRoute: () => rootRoute,
} as any)

const GameRulesRoute = GameRulesImport.update({
  id: '/game-rules',
  path: '/game-rules',
  getParentRoute: () => rootRoute,
} as any)

const DataSourceRoute = DataSourceImport.update({
  id: '/data-source',
  path: '/data-source',
  getParentRoute: () => rootRoute,
} as any)

const CalculatorResultsRoute = CalculatorResultsImport.update({
  id: '/calculator-results',
  path: '/calculator-results',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/calculator-results': {
      id: '/calculator-results'
      path: '/calculator-results'
      fullPath: '/calculator-results'
      preLoaderRoute: typeof CalculatorResultsImport
      parentRoute: typeof rootRoute
    }
    '/data-source': {
      id: '/data-source'
      path: '/data-source'
      fullPath: '/data-source'
      preLoaderRoute: typeof DataSourceImport
      parentRoute: typeof rootRoute
    }
    '/game-rules': {
      id: '/game-rules'
      path: '/game-rules'
      fullPath: '/game-rules'
      preLoaderRoute: typeof GameRulesImport
      parentRoute: typeof rootRoute
    }
    '/hand-ranking': {
      id: '/hand-ranking'
      path: '/hand-ranking'
      fullPath: '/hand-ranking'
      preLoaderRoute: typeof HandRankingImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/calculator-results': typeof CalculatorResultsRoute
  '/data-source': typeof DataSourceRoute
  '/game-rules': typeof GameRulesRoute
  '/hand-ranking': typeof HandRankingRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/calculator-results': typeof CalculatorResultsRoute
  '/data-source': typeof DataSourceRoute
  '/game-rules': typeof GameRulesRoute
  '/hand-ranking': typeof HandRankingRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/calculator-results': typeof CalculatorResultsRoute
  '/data-source': typeof DataSourceRoute
  '/game-rules': typeof GameRulesRoute
  '/hand-ranking': typeof HandRankingRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/calculator-results'
    | '/data-source'
    | '/game-rules'
    | '/hand-ranking'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/calculator-results'
    | '/data-source'
    | '/game-rules'
    | '/hand-ranking'
  id:
    | '__root__'
    | '/'
    | '/calculator-results'
    | '/data-source'
    | '/game-rules'
    | '/hand-ranking'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CalculatorResultsRoute: typeof CalculatorResultsRoute
  DataSourceRoute: typeof DataSourceRoute
  GameRulesRoute: typeof GameRulesRoute
  HandRankingRoute: typeof HandRankingRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CalculatorResultsRoute: CalculatorResultsRoute,
  DataSourceRoute: DataSourceRoute,
  GameRulesRoute: GameRulesRoute,
  HandRankingRoute: HandRankingRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/calculator-results",
        "/data-source",
        "/game-rules",
        "/hand-ranking"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/calculator-results": {
      "filePath": "calculator-results.tsx"
    },
    "/data-source": {
      "filePath": "data-source.tsx"
    },
    "/game-rules": {
      "filePath": "game-rules.tsx"
    },
    "/hand-ranking": {
      "filePath": "hand-ranking.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
