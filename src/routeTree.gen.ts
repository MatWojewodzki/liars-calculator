/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as HierarchyImport } from './routes/hierarchy'
import { Route as CalculatorImport } from './routes/calculator'
import { Route as IndexImport } from './routes/index'
import { Route as CalculatorResultsImport } from './routes/calculator.results'

// Create/Update Routes

const HierarchyRoute = HierarchyImport.update({
  id: '/hierarchy',
  path: '/hierarchy',
  getParentRoute: () => rootRoute,
} as any)

const CalculatorRoute = CalculatorImport.update({
  id: '/calculator',
  path: '/calculator',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const CalculatorResultsRoute = CalculatorResultsImport.update({
  id: '/results',
  path: '/results',
  getParentRoute: () => CalculatorRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/calculator': {
      id: '/calculator'
      path: '/calculator'
      fullPath: '/calculator'
      preLoaderRoute: typeof CalculatorImport
      parentRoute: typeof rootRoute
    }
    '/hierarchy': {
      id: '/hierarchy'
      path: '/hierarchy'
      fullPath: '/hierarchy'
      preLoaderRoute: typeof HierarchyImport
      parentRoute: typeof rootRoute
    }
    '/calculator/results': {
      id: '/calculator/results'
      path: '/results'
      fullPath: '/calculator/results'
      preLoaderRoute: typeof CalculatorResultsImport
      parentRoute: typeof CalculatorImport
    }
  }
}

// Create and export the route tree

interface CalculatorRouteChildren {
  CalculatorResultsRoute: typeof CalculatorResultsRoute
}

const CalculatorRouteChildren: CalculatorRouteChildren = {
  CalculatorResultsRoute: CalculatorResultsRoute,
}

const CalculatorRouteWithChildren = CalculatorRoute._addFileChildren(
  CalculatorRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/calculator': typeof CalculatorRouteWithChildren
  '/hierarchy': typeof HierarchyRoute
  '/calculator/results': typeof CalculatorResultsRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/calculator': typeof CalculatorRouteWithChildren
  '/hierarchy': typeof HierarchyRoute
  '/calculator/results': typeof CalculatorResultsRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/calculator': typeof CalculatorRouteWithChildren
  '/hierarchy': typeof HierarchyRoute
  '/calculator/results': typeof CalculatorResultsRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/calculator' | '/hierarchy' | '/calculator/results'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/calculator' | '/hierarchy' | '/calculator/results'
  id: '__root__' | '/' | '/calculator' | '/hierarchy' | '/calculator/results'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CalculatorRoute: typeof CalculatorRouteWithChildren
  HierarchyRoute: typeof HierarchyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CalculatorRoute: CalculatorRouteWithChildren,
  HierarchyRoute: HierarchyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/calculator",
        "/hierarchy"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/calculator": {
      "filePath": "calculator.tsx",
      "children": [
        "/calculator/results"
      ]
    },
    "/hierarchy": {
      "filePath": "hierarchy.tsx"
    },
    "/calculator/results": {
      "filePath": "calculator.results.tsx",
      "parent": "/calculator"
    }
  }
}
ROUTE_MANIFEST_END */
